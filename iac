#!/usr/bin/env bash
set -euo pipefail

# ---- load .env safely (supports quotes, spaces, inline comments) ----
if [[ -f .env ]]; then
  sed -i 's/\r$//' .env  # strip CRs in case the file came from Windows
  set -a
  # shellcheck source=/dev/null
  . ./.env
  set +a
fi

IMAGE_TAG="${IMAGE_TAG:-iac-dev:latest}"
BASE_IMAGE="${BASE_IMAGE:-debian:bookworm-slim}"
EXTRA_APT="${EXTRA_APT:-}"

echo "[*] Building image ${IMAGE_TAG}..."
docker build \
  --build-arg BASE_IMAGE="${BASE_IMAGE}" \
  --build-arg EXTRA_APT="${EXTRA_APT}" \
  --build-arg NVIM_VERSION="${NVIM_VERSION:-0.10.2}" \
  --build-arg NVIM_INSTALL_METHOD="${NVIM_INSTALL_METHOD:-appimage}" \
  -t "${IMAGE_TAG}" .

container="iac-$(date +%s)-$RANDOM"
echo "[*] Running ephemeral container ${container}..."

# Decide TTY flags: CI doesn't have a TTY
if [ -t 1 ]; then
  tty_flags=(-it)
else
  tty_flags=(-i)
fi

runargs=(
  --rm "${tty_flags[@]}" --name "${container}" --init
  -v "$PWD:/workspace"
  -e GIT_REPOS="${GIT_REPOS:-}"
  -e DOTFILES_REPO="${DOTFILES_REPO:-}"
  -e DOTFILES_METHOD="${DOTFILES_METHOD:-copy}"
  -e DOTFILES_PACKAGES="${DOTFILES_PACKAGES:-}"
  -e DEBUG_COMMAND="${DEBUG_COMMAND:-python3 -m http.server 8000}"
  -e TMUX_SESSION="${TMUX_SESSION:-dev}"
  -e GIT_DEPTH="${GIT_DEPTH:-1}"
  -e GIT_AUTH_MODE="${GIT_AUTH_MODE:-ssh}"
)

# ---- SSH agent forwarding (single, correct block) ----
if [[ -n "${SSH_AUTH_SOCK:-}" && -S "${SSH_AUTH_SOCK}" ]]; then
  runargs+=( -e SSH_AUTH_SOCK=/ssh-agent -v "${SSH_AUTH_SOCK}:/ssh-agent:ro" )
  echo "[*] SSH agent detected; forwarding socket."
else
  echo "[!] No SSH agent detected. Private repos over SSH will fail."
fi

# ---- Secrets mount (prefers ~/.dev-secrets if SECRETS_DIR not set) ----
DEFAULT_SECRETS_DIR="${HOME}/.dev-secrets"
SECRETS_DIR_EFFECTIVE="${SECRETS_DIR:-$DEFAULT_SECRETS_DIR}"
if [[ -d "${SECRETS_DIR_EFFECTIVE}" ]]; then
  runargs+=( -v "${SECRETS_DIR_EFFECTIVE}:/secrets:ro" )
  echo "[*] Mounting secrets from ${SECRETS_DIR_EFFECTIVE} -> /secrets (ro)"
else
  echo "[!] No secrets dir found at ${SECRETS_DIR_EFFECTIVE}."
fi

# ---- Optional: pass GH token via env (last resort; do not bake into image) ----
if [[ -n "${GITHUB_TOKEN:-}" ]]; then
  runargs+=( -e GITHUB_TOKEN )
fi

# Windows (Docker Desktop) SSH agent note:
#   -v //./pipe/openssh-ssh-agent:/ssh-agent
#   -e SSH_AUTH_SOCK=/ssh-agent

exec docker run "${runargs[@]}" "${IMAGE_TAG}"

